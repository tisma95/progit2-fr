[[s_perforce_import]]
==== Perforce

(((Perforce)))(((Importation, depuis Perforce)))
Le système suivant dont vous allez voir l'importation est Perforce.
Ainsi que nous l'avons dit plus haut, il y a deux façons de permettre de faire parler Git et Perforce l'un avec l'autre : git-p4 et Perforce Git Fusion.

===== Perforce Git Fusion

Git Fusion rend ce processus assez indolore.
Configurez les paramètres de votre projet, les correspondances utilisateur et les branches en utilisant un fichier de configuration (comme discuté dans ch09-git-and-other-systems#s_p4_git_fusion>>), et clonez le dépôt.
Git Fusion vous laisse avec ce qui ressemble à un dépôt Git natif, qui est alors prêt à être poussé vers un hôte Git natif si vous le désirez.
Vous pouvez même utiliser Perforce comme hôte Git si vous ça vous plaît.

[[s_sect_git_p4]]
===== Git-p4

Git-p4 peut aussi agir comme outil d'import.
Comme exemple, nous importerons le projet Jam depuis le Dépôt Public Perforce.
Pour définir votre client, vous devez exporter la variable d'environnement P4PORT pour pointer vers le dépôt Perforce :

[source,console]
----
$ export P4PORT=public.perforce.com:1666
----

[NOTE]
====
Pour suivre tout le long, vous aurez besoin d'un dépôt Perforce auquel vous connecter.
Nous utiliserons le dépôt public à public.perforce.com pour nos exemples, mais vous pouvez utiliser n'importe quel dépôt auquel vous avez accès.
====

(((commandes git, p4)))
Lancez la commande `git p4 clone` pour importer le projet Jam depuis le serveur Perforce, en fournissant le chemin vers le dépôt et le projet dans lequel vous voulez importer le projet :

[source,console]
----
$ git-p4 clone //guest/perforce_software/jam@all p4import
Importing from //guest/perforce_software/jam@all into p4import
Initialized empty Git repository in /private/tmp/p4import/.git/
Import destination: refs/remotes/p4/master
Importing revision 9957 (100%)
----

Ce projet particulier a seulement une branche, mais si vous avez des branches configurées avec des vues de branche (ou juste un ensemble de dossiers), vous pouvez utiliser l'option `--detect-branches` avec `git p4 clone` pour importer aussi toutes les branches du projet.
Voyez ch09-git-and-other-systems#s_git_p4_branches>> pour plus de détails sur ceci.

A ce point, vous avez presque terminé.
Si vous allez dans le dossier `p4import` et lancez `git log`, vous pouvez voir le travail importé :

[source,console]
----
$ git log -2
commit e5da1c909e5db3036475419f6379f2c73710c4e6
Author: giles <giles@giles@perforce.com>
Date:   Wed Feb 8 03:13:27 2012 -0800

    Correction to line 355; change </UL> to </OL>.

    [git-p4: depot-paths = "//public/jam/src/": change = 8068]

commit aa21359a0a135dda85c50a7f7cf249e4f7b8fd98
Author: kwirth <kwirth@perforce.com>
Date:   Tue Jul 7 01:35:51 2009 -0800

    Fix spelling error on Jam doc page (cummulative -> cumulative).

    [git-p4: depot-paths = "//public/jam/src/": change = 7304]
----

Vous pouvez voir que `git-p4` a laissé un identifiant dans chaque message de _commit_.
C'est bien de garder cet identifiant-là, au cas où vous auriez besoin de référencer le numéro de changement Perforce plus tard.
Cependant, si vous souhaitez enlever l'identifiant, c'est maintenant le moment de le faire – avant que vous ne commenciez à travailler sur le nouveau dépôt.
(((commandes git, filter-branch)))
Vous pouvez utiliser `git filter-branch` pour enlever en masse les chaînes d'identifiant :

[source,console]
----
$ git filter-branch --msg-filter 'sed -e "/^\[git-p4:/d"'
Rewrite e5da1c909e5db3036475419f6379f2c73710c4e6 (125/125)
Ref 'refs/heads/master' was rewritten
----

Si vous lancez `git log`, vous pouvez voir que toutes les sommes de vérification SHA-1 pour les _commits_ ont changé, mais les chaînes `git-p4` ne sont plus dans les messages de _commit_ :

[source,console]
----
$ git log -2
commit b17341801ed838d97f7800a54a6f9b95750839b7
Author: giles <giles@giles@perforce.com>
Date:   Wed Feb 8 03:13:27 2012 -0800

    Correction to line 355; change </UL> to </OL>.

commit 3e68c2e26cd89cb983eb52c024ecdfba1d6b3fff
Author: kwirth <kwirth@perforce.com>
Date:   Tue Jul 7 01:35:51 2009 -0800

    Fix spelling error on Jam doc page (cummulative -> cumulative).
----

Votre import est prêt à être poussé vers votre nouveau serveur Git.
