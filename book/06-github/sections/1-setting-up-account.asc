=== Configuration et paramétrage d'un compte

(((GitHub, comptes utilisateur)))
La première chose à faire consiste à créer un compte utilisateur gratuit.
Allez tout simplement sur https://github.com[], choisissez un nom d'utilisateur qui n'est pas déjà pris et saisissez
une adresse électronique et un mot de passe, puis cliquez sur le gros bouton vert « Sign up for GitHub » (S'inscrire sur GitHub).

.Le formulaire d'inscription de GitHub.
image::images/signup.png[Le formulaire d'inscription de GitHub.]

La deuxième chose que vous verrez est la page des tarifs pour des projets améliorés mais il vaut mieux ignorer cela pour l'instant.
GitHub vous envoie un courriel pour vérifier l'adresse fournie.
Suivez les instructions mentionnées, c'est très important (comme nous allons le voir plus tard).

[NOTE]
====
GitHub fournit presque toutes ses fonctionnalités pour les comptes gratuits, à l'exception de quelques fonctions avancées.

Les versions payantes de GitHub incluent des outils et fonctions avancés ainsi que des limites plus grandes que celles des services gratuits, mais nous ne traiterons pas de ces points dans ce livre.
Pour de plus amples informations sur les versions disponibles et une comparaison, visitez https://github.com/pricing[].
====

En cliquant sur le logo Octocat (logo en forme de chat) dans le coin supérieur gauche de l'écran, vous accéderez à votre tableau de bord.
Vous êtes maintenant prêt à utiliser GitHub.

==== Accès par SSH

(((clés SSH, avec GitHub)))
Pour l'instant, vous avez la possibilité de vous connecter à des dépôts Git en utilisant le protocole `https://` et de vous identifier au moyen de votre nom d'utilisateur et de votre mot de passe.
Cependant, pour simplement cloner des projets publics, il n'est même pas nécessaire de créer un compte ‑ le compte que nous venons de créer devient utile pour commencer à dupliquer (_fork_) un projet ou pour pousser sur ces dépôts plus tard.

Si vous préférez utiliser des serveurs distants en SSH, vous aurez besoin de renseigner votre clé publique.
Si vous n'en possédez pas déjà une, référez-vous à <<ch04-git-on-the-server#s_generate_ssh_key>>.
Accédez aux paramètres de votre compte en utilisant le lien en haut à droite de la fenêtre :

.Lien vers « Account settings » (paramètres du compte).
image::images/account-settings.png[Lien vers « Account settings ».]

Sélectionnez ensuite la section « SSH keys » (clés SSH) sur le côté gauche.

.Lien vers « SSH keys » (clés SSH).
image::images/ssh-keys.png[Lien vers « SSH keys » (clés SSH)]

Ensuite, cliquez sur le bouton « `Add an SSH key` » (ajouter une clé SSH), donnez un nom à votre clé, copiez le contenu du fichier de clé publique `~/.ssh/id_rsa.pub` (ou autre si vous l'avez appelé différemment) dans la zone de texte et cliquez sur « Add key » (ajouter la clé).

[NOTE]
====
Assurez-vous de choisir un nom facile à retenir pour votre clé SSH.
Vous pouvez donner un nom à chacune de vos clés (par ex. : « mon portable » ou « compte travail ») de façon à la retrouver facilement si vous devez la révoquer plus tard.
====

[[s_personal_avatar]]
==== Votre Avatar

Ensuite, si vous le souhaitez, vous pouvez remplacer l'avatar généré pour vous par une image de votre choix.
Sélectionnez la section « Profile » (profil) (au dessus de la section « SSH Keys ») et cliquez sur « Upload new picture » (télécharger une nouvelle image).

.Lien vers « Profile » (profil).
image::images/your-profile.png[Lien vers « Profile ».]

Après avoir sélectionné une image sur votre disque dur, il vous est possible de la recadrer.

.Recadrage de l'avatar
image::images/avatar-crop.png[Recadrage de l'avatar.]

À présent, toutes vos interventions sur le site seront agrémentées de votre avatar au côté de votre nom d'utilisateur.

S'il se trouve que vous avez déposé un avatar sur le service populaire Gravatar (souvent utilisé pour les comptes Wordpress), cet avatar sera utilisé par défaut et vous n'avez pas à exécuter cette étape.

==== Vos adresses électroniques

Github utilise les adresses électroniques pour faire correspondre les _commits_ Git aux utilisateurs.
Si vous utilisez plusieurs adresses électroniques dans vos _commits_ et que vous souhaitez que GitHub les relie correctement, vous devez ajouter toutes les adresses que vous avez utilisées dans la section « Emails » (adresses électroniques) de la section d'administration.

[[s_add_email_addresses]]
.Ajout d'adresses électroniques
image::images/email-settings.png[Ajout d'adresses électroniques.]

Sur <<ch06-github#s_add_email_addresses>> nous pouvons voir certains états possibles.
L'adresse du haut est vérifiée et définie comme adresse principale, c'est-à-dire que ce sera l'adresse utilisée pour vous envoyer toutes les notifications.
La seconde adresse est vérifiée et peut donc aussi être définie comme adresse principale si on l'échange avec la première.
La dernière adresse est non vérifiée, ce qui signifie que vous ne pouvez pas en faire votre adresse principale.
Si GitHub détecte une de ces adresses dans des messages de validation dans n'importe quel dépôt du site, il les reliera à votre compte utilisateur.

==== Authentification à deux facteurs

Enfin, pour plus de sécurité, vous devriez assurément paramétrer une authentification à deux facteurs ou « 2FA » (_2 Factor Authentication_).
L'authentification à deux facteurs est un mécanisme d'authentification qui est devenu très populaire récemment pour réduire les risques de corruption de votre compte si votre mot de passe est dérobé.
Une fois activée, GitHub vous demandera deux méthodes différentes d'authentification, de sorte que si l'une devait être compromise, un attaquant ne pourrait tout de même pas accéder à votre compte.

Vous pouvez trouver les réglages de l'authentification à deux facteurs dans la section « Security » (Sécurité) de la section d'administration.

.2FA dans la section « Security » (Sécurité)
image::images/2fa-1.png[2FA dans la section « Security » (Sécurité)]

Si vous cliquez sur le bouton « Set up two-factor authentication » (paramétrage de l'authentification à deux facteurs), vous serez redirigé vers une page de configuration sur laquelle vous pourrez choisir d'utiliser une application de téléphone mobile pour générer votre code secondaire (un « mot de passe à usage unique basé sur la date ») ou bien de vous faire envoyer un code GitHub par SMS chaque fois que vous avez besoin de vous identifier.

Après avoir choisi votre méthode préférée et suivi les instructions pour activer 2FA, votre compte sera un peu plus sécurisé et vous devrez fournir un code supplémentaire en plus de votre mot de passe quand vous vous identifierez sur GitHub.
